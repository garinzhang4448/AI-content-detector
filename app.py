import streamlit as st
import tensorflow as tf
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
import requests
from pprint import pprint


def load_model():
    model = tf.keras.models.load_model('cnn_model.h5')
    return model

model = load_model()

st.title("AI-content detector app")

input_text = st.text_area("Enter your content")
# when the prob is lower than 50%, it means the content is generated by human
if st.button("Submit"):
    # CNN prediction part
    tokenizer = Tokenizer()
    tokenizer.fit_on_texts([input_text])
    sequences = tokenizer.texts_to_sequences([input_text])
    padded_sequences = pad_sequences(sequences, maxlen=5000)  
    prediction = model.predict(padded_sequences)
    prob_cnn = float(prediction[0][0])

    # Saping part
    response = requests.post(
    "https://api.sapling.ai/api/v1/aidetect",
    json={
        "key": "RXE0ATFO4HO106O1AQHDO0FKL3ZAOJSZ",
        "text": input_text
    })
    content_by_saping = response.json()
    prob_saping = content_by_saping['score']

    st.write("The probability of Human-generated answer: {:.2f}%".format((1-prob_cnn)*100))
    st.write("The Probability of Human-generated Answer using Saping : {:.2f}%".format((1-float(prob_saping)) * 100))

